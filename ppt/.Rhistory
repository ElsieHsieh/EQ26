rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
#C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv
#xmldoc <- xmlParse(url, encoding = "utf8")
#data <- xmlApply(getNodeSet(xmldoc,"//emic:DISASTER_DATA"), xmlAttrs)
rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
#C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv
#xmldoc <- xmlParse(url, encoding = "utf8")
#data <- xmlApply(getNodeSet(xmldoc,"//emic:DISASTER_DATA"), xmlAttrs)
View(alldata)
rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1201_0023.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1201_0023.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
#C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv
#xmldoc <- xmlParse(url, encoding = "utf8")
#data <- xmlApply(getNodeSet(xmldoc,"//emic:DISASTER_DATA"), xmlAttrs)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA.csv",append=TRUE,sep=" ",row.names = FALSE,col.names= YN)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
setwd("C:Users/USER/Google 雲端硬碟/Grad/Grad105-1/NTU_Coding/PQ/EQ26/ppt")
setwd("C:Users/USER/Google雲端硬碟/Grad/Grad105-1/NTU_Coding/PQ/EQ26/ppt")
setwd("D:/L_Coding/EQ26/ppt")
Sys.getlocale("LC_ALL")
library(readr)
Disaster_NOV_1205 <- read_csv("D:/Disaster_NOV_1205.csv")
View(Disaster_NOV_1205)
install.packages("rCharts")
library(readr)
NFA1201 <- read_csv("D:/L_Coding/EQ26/R/NFA1201.csv")
View(NFA1201)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('D:/L_Coding/EQ26/ppt/index.r', echo=TRUE)
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
names(dataSET) <- gsub("\\.","", names(dataSET))
rPlot(SepalLength ~ SepalWidth | Species,
data = dataSET, color = "Species", type = "point")
rPlot
source('D:/L_Coding/EQ26/ppt/index.r', echo=TRUE)
source('D:/L_Coding/EQ26/ppt/index.r', echo=TRUE)
install.packages("devtools")
source('D:/L_Coding/EQ26/ppt/index.r', echo=TRUE)
rm(list=ls(all=TRUE))
library(readr)
install.packages("devtools")
require(devtools)
install_github("rCharts","ramnathv/rCharts")
install.packages("devtools")
install.packages("devtools")
rm(list=ls(all=TRUE))
library(readr)
require(devtools)
library(rCharts)
dataSET <- iris
names(dataSET) <- gsub("\\.","", names(dataSET))
iriplot <- rPlot(SepalLength ~ SepalWidth | Species,
data = dataSET, color = "Species", type = "point")
iriplot$save("iriplot.html",standalone = TRUE)
source('D:/L_Coding/EQ26/ppt/index.r', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
plot(pressure)
plot(pressure)
